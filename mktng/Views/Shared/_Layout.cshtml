<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Variations</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <link rel="icon" type="image/x-icon" href="~/images/mktngicon.png" />
    <!-- Include SweetAlert Library -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body class="d-flex flex-column min-vh-100">
    <header>
        <nav class="navbar navbar-expand-lg navbar-light bg-white shadow-sm">
            <div class="container">
                <a class="navbar-brand d-flex align-items-center" asp-area="" asp-controller="Home" asp-action="Index">
                    <img src="~/images/1st_topnotch_logo.png" alt="TopNotch Logo" class="img-fluid" style="height: 50px; width: auto;" />
                </a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ml-auto">
                        <li class="nav-item">
                            <a class="btn btn-outline-warning btn-sm font-weight-bold mx-2 px-4 text-dark" asp-area="" asp-controller="Home" asp-action="Login">
                                Login
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="btn btn-warning btn-sm font-weight-bold mx-2 px-4 text-dark" asp-area="" asp-controller="Home" asp-action="Register">
                                Register
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container flex-grow-1">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="bg-white shadow-sm">
        <div class="container text-center py-3">
            <h6 id="clock" class="text-dark font-weight-bold"></h6>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)

    <script>
        function updateClock() {
            var now = new Date();
            var hours = now.getHours().toString().padStart(2, '0');
            var minutes = now.getMinutes().toString().padStart(2, '0');
            var seconds = now.getSeconds().toString().padStart(2, '0');
            var ampm = hours >= 12 ? 'PM' : 'AM';
            hours = hours % 12;
            hours = hours ? hours : 12;

            var strTime = hours + ':' + minutes + ':' + seconds + ' ' + ampm;

            var options = { year: 'numeric', month: 'long', day: 'numeric' };
            var strDate = now.toLocaleDateString(undefined, options);

            document.getElementById('clock').textContent = strDate + ' ' + strTime;
        }
        setInterval(updateClock, 1000);
        updateClock();

        document.addEventListener('DOMContentLoaded', function () {
            // Check for TempData["Message"]
            const message = '@Html.Raw(TempData["Message"])';
            if (message && message !== '') {
                const notification = JSON.parse(message);

                // Map notification types to SweetAlert icons
                const iconMap = {
                    success: 'success',
                    error: 'error',
                    warning: 'warning',
                    info: 'info'
                };

                // Show SweetAlert notification
                Swal.fire({
                    title: notification.title,
                    text: notification.message,
                    icon: iconMap[notification.type],
                    confirmButtonColor: '#ffb504'
                });
            }
        });
    </script>
</body>
</html>
